worker_processes auto;

events {
	worker_connections 768;
}

http {
	ssl_certificate /etc/nginx/ssl/tinmarr.com.pem;
	ssl_certificate_key /etc/nginx/ssl/tinmarr.com.key;

	map "" $ip {
		default "192.168.0.10";
	}

	server {
		listen 80 default_server;
		server_name -;
		return 301 https://$server_name$request_uri;
	}

	server {
		listen 443 ssl default_server;
		server_name -;
		return 404;
	}

	server {
		listen 443 ssl;
		server_name internal.tinmarr.com;

		# Homarr (dashboard)
		location / {
			proxy_pass http://$ip:7575;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
		# qBittorren/
		location /qbit/ {
			proxy_pass http://localhost:9091/;
			proxy_http_version 1.1;

			proxy_set_header   Host               localhost:9091;
			proxy_set_header   X-Forwarded-Proto  $scheme;
			proxy_set_header   X-Forwarded-Host   $http_host;
			proxy_set_header   X-Forwarded-For    $remote_addr;
			proxy_set_header   X-Real-IP          $remote_addr;

			proxy_cookie_path  /                  "/; Secure";
		}
		# Prowlarr
		location /prowlarr {
			proxy_pass http://$ip:9696;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_redirect off;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $http_connection;
		}
		# Allow the API/Indexer External Access via NGINX
		location ~ /prowlarr(/[0-9]+)?/api {
			auth_basic off;
			proxy_pass http://$ip:9696;
		}
		# Sonarr
		location ^~ /sonarr {
			proxy_pass http://$ip:8989;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_redirect off;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $http_connection;
		}
		# Allow the API External Access via NGINX
		location ^~ /sonarr/api {
			auth_basic off;
			proxy_pass http://$ip:8989;
		}
		# Radarr
		location ^~ /radarr {
			proxy_pass http://$ip:7878;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_redirect off;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $http_connection;
		}
		# Allow the API External Access via NGINX
		location ^~ /radarr/api {
			auth_basic off;
			proxy_pass http://$ip:7878;
		}
		# syncthing
		location /syncthing/ {
			proxy_set_header        Host $host;
			proxy_set_header        X-Real-IP $remote_addr;
			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header        X-Forwarded-Proto $scheme;

			proxy_pass              http://$ip:8384/;

			proxy_read_timeout      600s;
			proxy_send_timeout      600s;
		}
	}
	# PiHole
	server {
		listen 443 ssl;
		server_name pihole.tinmarr.com;

		location /admin/ {
			proxy_pass http://$ip:8888;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

		location /api/ {
			proxy_pass http://$ip:8888;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
	}
	# UptimeKuma
	server {
		listen 443 ssl;
		server_name kuma.tinmarr.com;

		location / {
			proxy_pass         http://$ip:3001;
			proxy_http_version 1.1;
			proxy_set_header   Upgrade $http_upgrade;
			proxy_set_header   Connection "upgrade";
			proxy_set_header   Host $host;
		}
	}
	# Dash Dot
	server {
		listen 443 ssl;
		server_name dash.tinmarr.com;

		location / {
			auth_basic "Dash.";
			auth_basic_user_file /etc/nginx/.htpasswd;

			proxy_pass http://$ip:9092;
		}
	}
	# Jellyfin
	server {
		listen 443 ssl;
		server_name jellyfin.tinmarr.com;

		location / {
			proxy_pass http://$ip:8096;
		}
	}
	# Jellyseerr
	server {
		listen 443 ssl;
		server_name tinflix.tinmarr.com;

		location / {
			proxy_pass http://$ip:5055;
		}
	}
	# Immich
	server {
		listen 443 ssl;
		server_name immich.tinmarr.com;

		# allow large file uploads
		client_max_body_size 50000M;

		# Set headers
		proxy_set_header Host              $http_host;
		proxy_set_header X-Real-IP         $remote_addr;
		proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# enable websockets: http://nginx.org/en/docs/http/websocket.html
		proxy_http_version 1.1;
		proxy_set_header   Upgrade    $http_upgrade;
		proxy_set_header   Connection "upgrade";
		proxy_redirect     off;

		# set timeout
		proxy_read_timeout 600s;
		proxy_send_timeout 600s;
		send_timeout       600s;

		location / {
			proxy_pass http://$ip:2283;
		}
	}
	# Vaultwarden
	server {
		listen 443 ssl;
		server_name vw.tinmarr.com;

		location / {
			proxy_pass http://$ip:9090;
		}
	}
	# Superset
	server {
		listen 443 ssl;
		server_name superset.tinmarr.com;

		location / {
			proxy_pass http://$ip:9093;
		}
	}
	# Home Assistant
	server {
		listen 443 ssl;
		server_name ha.tinmarr.com;

		location / {
			proxy_pass http://$ip:8123;
		}
	}
	# Actual Budget
	server {
		listen 443 ssl;
		server_name budget.tinmarr.com;

		client_max_body_size 0;

		location / {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;

			proxy_pass http://$ip:5006;
		}
	}
}
