#!/usr/bin/env bash
cd ~

echo "$(date): Backing up notes"
cd ~/notes
git add .
git commit --no-gpg-sign -m "backup"
git push
cd ~

echo "$(date): Backing up Vaultwarden"
echo "$(date): Creating Backup"
sqlite3 ~/vw-data/db.sqlite3 ".backup '/home/martin/vw-data/db-backup.sqlite3'"

filename="$(date +'%F')-vw.tar.gz"
tar czf $filename vw-data

enc_filename=encrypted-$filename.gpg
gpg --output $enc_filename --encrypt -r 15B87AFCCED88630 $filename

echo "$(date): Saving Backup"
backedup=$(ls ~/backup_disk | rg vw)
if [[ $(echo $backedup | wc -l) -ge 3 ]]; then
    for item in $(echo $backedup | head -n $(($(echo $backedup | wc -l) - 3))); do
        rm ~/backup_disk/$item
    done
fi
mv $filename ~/backup_disk &

oldfile="$(rclone lsf b2:chappy-vw-backup)"
(rclone move $enc_filename b2:chappy-vw-backup && rclone deletefile b2:chappy-vw-backup/$oldfile) &

echo "$(date): Backing up photos"
filename="$(date +'%F')-photos.tar.gz"

echo "$(date): Starting tarball for $filename"
docker exec -t immich_postgres pg_dumpall --clean --if-exists --username=postgres | gzip > "/home/martin/media/photos/dump.sql.gz"
tar czf $filename ~/media/photos/{library,profile,upload,dump.sql.gz} -P 
rm ~/media/photos/dump.sql.gz # Don't need to save random dumps

echo "$(date): Encrypting..."
enc_filename=encrypted-$filename.gpg
gpg --output $enc_filename --encrypt -r 15B87AFCCED88630 $filename

echo "$(date): Starting backup to B2..."
oldfile="$(rclone lsf b2:chappy-server-backup)"
(rclone move $enc_filename b2:chappy-server-backup && rclone deletefile b2:chappy-server-backup/$oldfile) &

echo "$(date): Making space on disk..."
backedup=$(ls ~/backup_disk | rg photos)
if [[ $(echo $backedup | wc -l) -ge 3 ]]; then
    for item in $(echo $backedup | head -n $(($(echo $backedup | wc -l) - 3))); do
        rm ~/backup_disk/$item
    done
fi

echo "$(date): Moving file..."
mv "$filename" ~/backup_disk &

echo "$(date): Waiting for everything to finish..."
wait

echo "$(date): Done"
